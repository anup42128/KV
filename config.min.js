// Encrypted Configuration - PM SHRI KV Barrackpore
(function(w){const _0xc=['aHR0cHM6Ly9veW10aGRid2VtZWxvam5pY2xpZy5zdXBhYmFzZS5jbw==','ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5TG1WNVNuTWlPaUpsZG0xNVltRnpaVlFpS1c1RVl5SWlaWGxxYjJodVpHSmtaVzFsYkcxWWJtOWJZMnhwWjJKbGNuSjJiR3hwSjF2SGNtOWZZVzR2SWc=='];const _0xe=s=>atob(s);const _0xf=()=>{const u=_0xe(_0xc[0]);const k=_0xe(_0xc[1]);if(!w.supabase)return null;try{return w.supabase.createClient(u,k);}catch(e){return null;}};w.initApp=_0xf;const _0xg={init:()=>{const c=_0xf();if(c){w.dbClient=c;return true;}return false;},test:async()=>{if(!w.dbClient)return false;try{const{data,error}=await w.dbClient.from('users').select('id').limit(1);return!error;}catch(e){return false;}},create:async(d)=>{if(!w.dbClient)return{success:false,error:'No connection'};try{const h=await crypto.subtle.digest('SHA-256',new TextEncoder().encode(d.password+'KV_SALT_2024'));const p=Array.from(new Uint8Array(h)).map(b=>b.toString(16).padStart(2,'0')).join('');const{data:e,error:ee}=await w.dbClient.from('users').select('username').eq('username',d.username).maybeSingle();if(e&&!ee)return{success:false,error:'Username already exists'};const{data,error}=await w.dbClient.from('users').insert([{username:d.username,password_hash:p,full_name:d.full_name||d.username,user_type:d.user_type||'student'}]).select().single();if(error)return{success:false,error:`Failed: ${error.message}`};return{success:true,user:{id:data.id,username:data.username,user_type:data.user_type,created_at:data.created_at},message:'Account created successfully!'};}catch(e){return{success:false,error:e.message||'Failed to create account'};}},auth:async(u,p)=>{if(!w.dbClient)return{success:false,error:'No connection'};try{const h=await crypto.subtle.digest('SHA-256',new TextEncoder().encode(p+'KV_SALT_2024'));const ph=Array.from(new Uint8Array(h)).map(b=>b.toString(16).padStart(2,'0')).join('');const{data:user,error}=await w.dbClient.from('users').select('id,username,user_type,full_name,is_active,last_login').eq('username',u).eq('password_hash',ph).eq('is_active',true).single();if(error||!user)return{success:false,error:'Invalid username or password'};await w.dbClient.from('users').update({last_login:new Date().toISOString()}).eq('id',user.id);return{success:true,user:{id:user.id,username:user.username,user_type:user.user_type,full_name:user.full_name},message:`Welcome back, ${user.username}!`};}catch(e){return{success:false,error:'Login failed. Please try again.'};}}}; w.DatabaseHelper={testConnection:_0xg.test,createUser:_0xg.create,authenticateUser:_0xg.auth}; const _0xh=()=>{if(w.supabase&&typeof w.initApp==='function'){const s=w.initApp();if(s){_0xg.init();return true;}}return false;}; w.initializeSupabase=_0xh; document.addEventListener('DOMContentLoaded',()=>{const init=()=>{if(_0xh()){console.log('âœ… System ready');}else{setTimeout(init,100);}};setTimeout(init,500);});})(window);
